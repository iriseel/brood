@font-face {
    font-family: "Pirelli_Regular";
    src:
    url("fonts/Pirelli_Regular.ttf") format("truetype"),
}

@font-face {
    font-family: "Rader";
    src:
    url("fonts/PPRader-Thin.otf") format("opentype"),
}

* {
    box-sizing: border-box;
}

body {
    font-size:clamp(20px, 26px, 40px);
    /* font-size:80px; */
    font-family: "Pirelli_Regular";
    background:black;
    color:white;
    margin:1em;
    /* position:relative; */
}

img {
    width:60vw;
    height:auto;
}

.space {
    width:100%;
    height:4em;
    display:block;
}

/* top scanner glow */
.scannerLine {
    position:fixed;
    top:0em;
    left:0;
    height:1em;
    width:160%;
    transform: translate(-20%,-80%);
    background:white;
    filter: blur(8px);
}

/* TEXT STYLING */
.container {
    max-width:100vw;
    /* max-width:500px; */
    display:flex;
    flex-flow: row wrap;
    justify-content: center;
    align-content: center;
    /* background:red; */
}

.chapter {
    margin-bottom:4em;
}

.header, .textContainer, .shadowTextContainer {
    width:100%;
    /* background:blue; */
}

.header {
    height:50vh;
    /* margin:1em 0; */
    display:flex;
    flex-flow: row wrap;
    justify-content: start;
    align-content: center;

    overflow:hidden;

    /* 
    font-size:3em;
    line-break:anywhere;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-position: 50% 50%;
    background-image: url(imgs/erasures/kent.png); 
    */

    margin-bottom:2em;

    /* background:red; */
}

.header img {
    max-height:50%;
    /* background:green; */
}

.textContainer .sticky, .shadowTextContainer .shadowLine {
    white-space: nowrap;
}

span.temp {
    white-space: nowrap;
    margin:0;
    padding:0;
    border:0;
}

.sticky, .fakesticky {
    transition: filter 1s ease-in-out, opacity 1s ease-in-out, transform 1s ease-in-out;
}

.sticky {
    position: -webkit-sticky;
    position: sticky;
    top: 0px;
}

/* for images, headers, and any other tall elements that would produce awkward spacing if prepended outright*/
.fakesticky {
    position:relative;
    /* background:red; */
}

/* SHADOW STYLING */
.shadowTextContainer, .allMothsContainer {
    position:fixed;
    top:0;
    left:0;
    height:100vh;

}

.shadowTextContainer {
    z-index:-1;
    /* need this padding to replicate the margin on body, which applies to container. but don't need it for vertical, since sticky activates at top:0 */
    padding: 0 1em;
    overflow-y: visible;
    /* background:blue; */
}

.shadowLine {
    /* background:pink; */
    opacity:.5;
    filter: blur(3px);
    transition: max-height 1s ease-in-out, opacity 1s ease-in-out;
    position:relative;
}

.fakesticky.shadowLine {
    transform: scaleY(-1);
    /* need this fadeIn animation to coverup a weird glitch thing it does on prepend */
    animation: fadeIn 1s ease-in-out forwards;
}

.expand {
    max-height:0px;
    animation: expand 2s ease-in-out forwards;
}

.shrink {
    max-height:1000px;
    animation: shrink 1s ease-in-out forwards;

}

/* This is so that when a new line is prepended, the transition is smooth */
@keyframes expand {
    0%{
        max-height: 0px;
    }
    100%{
        max-height: 1000px;
    }
}

/* doing the same for when a shadowLine is removed */
@keyframes shrink {
    0%{
        max-height: 1000px;
    }
    100%{
        max-height: 0px;
    }
}

@keyframes fadeIn {
    0%{
        opacity:0;
    }
    100%{
        opacity:.5;
    }
}

/* HOLE STYLING */
.hole {
    position: relative;
    height:auto;
    background-color: rgba(0,0,0,.5);
    /* -webkit-mask: url('imgs/holes/hole1.png') center / contain no-repeat;
    mask: url('imgs/holes/hole1.png') center / contain no-repeat; */

    box-shadow: inset 0 0 10px 10px rgba(255,255,255,.1);
    /* ?? this seems important somehow as a possible reason behind the scroll wiggle room - when overflow:visible, you can scroll back infinitely */
    overflow:hidden;
}

.holeMoth {
    position: absolute;
    top:0;
    left:0;
    width:auto;
    transition: 1s ease-in-out;
    transform: translate(-50%,-50%);
    /* mix-blend-mode:color-dodge; */

    /* filter: drop-shadow(0 0 0.75em rgba(255,255,255, 0.5)); */

}

/* MOTH STYLING */
.allMothsContainer {
    width:100vw;

    overflow:hidden;
}

.moth_container, .bg_moth_container {
    /* width:50vw; */
    position:absolute;
    filter: drop-shadow(10px 10px 6px black);
    transform:translate(-50%,-50%);
}

.moth_container {
    z-index:10;
    transition: .1s ease-in-out;
    /* animation: appear 5s infinite; */
}

.bg_moth_container {
    z-index:-10;
    transition: 1s ease-in-out;
}

.moth {
    width:100%;
}

.moth img {
    width:auto;
}

/* GENERAL STYLING */
.blur {
    /* filter:url("#turbulence") blur(5px); */
    filter: blur(10px);
}

/* ??toggling this produces a wierd effect on reverse, where unsticked images "blink" before reappearing */
.transparent {
    opacity:0;
}
